{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ARM Template",
	"injectionSelector": "L:meta.structure.dictionary.value.json,L:meta.structure.dictionary.value.json.comments",
	"$injectionSelectorComment": "These rules will be injected before (to the Left) of dictionary values in JSON and JSONC",
	"patterns": [
		{
			"include": "#embeddedexpression"
		}
	],
	"repository": {
		"embeddedexpression": {
			"name": "meta.expression.arm-deployment",
			"begin": "\"\\[(?!\\[)",
			"$beginComment": "A string that starts with [[ is not an expression",
			"end": "\\]\"",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.expression.begin.arm-deployment"
				}
			},
			"endCaptures": {
				"0": {
					"name": "keyword.other.expression.end.arm-deployment"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				},
				{
					"name": "invalid.illegal.expected-expression.arm-deployment",
					"match": "[^\\s]"
				}
			]
		},
		"expression": {
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#number"
				},
				{
					"include": "#functioncall"
				}
			]
		},
		"number": {
			"name": "constant.numeric.arm-deployment",
			"match": "[+-]?[0-9]+(\\.[0-9]+)?([Ee][+-]?[0-9]+)?"
		},
		"string": {
			"name": "string.quoted.single.arm-deployment",
			"begin": "[']",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.arm-deployment"
				}
			},
			"end": "['](?!['])",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.arm-deployment"
				}
			},
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"stringcontent": {
			"patterns": [
				{
					"name": "constant.character.escape.arm-deployment",
					"match": "['][']"
				}
			]
		},
		"functioncall": {
			"name": "meta.function-call.arm-deployment",
			"begin": "(?x) #extended mode\n \\s* ((?<namespace>[_$[:alpha:]][_$[:alnum:]]*) \\s* (\\.) \\s*)?   (?<functionname>[_$[:alpha:]][_$[:alnum:]]*)   \\s* (?<openparen>\\()",
			"end": "\\)",
			"beginCaptures": {
				"2": {
					"name": "variable.other.namespace.arm-deployment"
				},
				"3": {
					"name": "punctuation.accessor.arm-deployment"
				},
				"4": {
					"name": "entity.name.function.arm-deployment"
				},
				"5": {
					"name": "meta.brace.round.arm-deployment"
				}
			},
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.arm-deployment"
				}
			},
			"patterns": [
				{
					"include": "#functionargs"
				}
			]
		},
		"functionargs": {
			"name": "meta.function-arguments.arm-deployment",
			"begin": "\\G\\s*",
			"end": "\\s*(?=\\))",
			"patterns": [
				{
					"include": "#expression"
				},
				{
					"match": "[\\s^,)]",
					"name": "invalid.illegal.expected-comma.arm-deployment"
				}
			]
		}
	},
	"scopeName": "source.arm-deployment",
	"uuid": "3ADA43CD-2258-4907-8477-169A7FDDF216"
}
